{"version":3,"file":"static/js/64.1fa996da.chunk.js","mappings":"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","sources":["component/pages/HomePage/HomePage.styled.jsx","component/pages/HomePage/ThreeScene.jsx","component/pages/HomePage/HomePage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BUTTON = styled(NavLink)`\nposition:absolute;\nright: 60px;\nfont-size:20px;\nmargin-top:20px;\nborder-radius:20px;\npadding: 6px 10px;\nbackground:transparent;\ncolor: #d1af27;\n @media (min-width: 320px) and (max-width: 610px) {\n    margin-top:200px;\n  }\n`\nexport const P = styled.p`\nleft: 60px;\nfont-size: 3vh;\nfont-weight: 700;\nmargin-top: 20px;\nborder-radius: 20px;\nletter-spacing: 2px;\nline-height: 137%;\nbackground: transparent;\ncolor: rgb(209, 118, 39);\n-webkit-text-stroke: 0.16vh rgb(241, 206, 7);\n@media (min-width: 1028px){\n    margin-top:60px;\n}\n@media (max-width: 1100px){\n    margin-top:80px;\n}\n@media (max-width: 690px){\n    visibility:hidden;\n}\n`\nexport const DIV = styled.div`\nposition:absolute;\ndisplay:flex;\nleft: 60px;\nfont-size:20px;\nmargin-top:20px;\nheight:500px;\nbackground:transparent;\ncolor: #d1af27;\n@media (min-width: 1030px){\n    max-width:400px;\n}\n`\nexport const DIV_CARD = styled.div`\nposition:absolute;\ndisplay:flex;\nbottom:30px;\nright: 50px;\n`","import React, { useEffect, useRef } from \"react\";\n\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nconst ThreeScene = () => {\nconst canvasRef = useRef(null);\n\nuseEffect(() => {\n    let scene, camera, renderer, controls, gu, sizes, shift, pts, g, m, p, clock;\n    const init = () => {\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0x160016);\n\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n  camera.position.set(0, 4, 21);\n\n  renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  controls = new OrbitControls(camera, renderer.domElement);\n  controls.enableDamping = true;\n  controls.enablePan = false;\n\n  gu = {\n    time: { value: 0 },\n  };\n\n  sizes = [];\n  shift = [];\n\n  const pushShift = () => {\n    shift.push(\n      Math.random() * Math.PI,\n      Math.random() * Math.PI * 2,\n      (Math.random() * 0.9 + 0.1) * Math.PI * 0.1,\n      Math.random() * 0.9 + 0.1\n    );\n  };\n\n  pts = new Array(50000).fill().map((p) => {\n    sizes.push(Math.random() * 1.5 + 0.5);\n    pushShift();\n    return new THREE.Vector3()\n      .randomDirection()\n      .multiplyScalar(Math.random() * 0.5 + 9.5);\n  });\n\n  for (let i = 0; i < 100000; i++) {\n    let r = 10,\n      R = 40;\n    let rand = Math.pow(Math.random(), 1.5);\n    let radius = Math.sqrt(R * R * rand + (1 - rand) * r * r);\n    pts.push(\n      new THREE.Vector3().setFromCylindricalCoords(\n        radius,\n        Math.random() * 2 * Math.PI,\n        (Math.random() - 0.5) * 2\n      )\n    );\n    sizes.push(Math.random() * 1.5 + 0.5);\n    pushShift();\n  }\n\n  g = new THREE.BufferGeometry().setFromPoints(pts);\n  g.setAttribute(\"sizes\", new THREE.Float32BufferAttribute(sizes, 1));\n  g.setAttribute(\"shift\", new THREE.Float32BufferAttribute(shift, 4));\n\n  m = new THREE.PointsMaterial({\n    size: 0.125,\n    transparent: true,\n    depthTest: false,\n    blending: THREE.AdditiveBlending,\n    onBeforeCompile: (shader) => {\n      shader.uniforms.time = gu.time;\n      shader.vertexShader = `\n        uniform float time;\n        attribute float sizes;\n        attribute vec4 shift;\n        varying vec3 vColor;\n        ${shader.vertexShader}\n      `\n        .replace(`gl_PointSize = size;`, `gl_PointSize = size * sizes;`)\n        .replace(\n          `#include <color_vertex>`,\n          `#include <color_vertex>\n          float d = length(abs(position) / vec3(40., 10., 40));\n          d = clamp(d, 0., 1.);\n          vColor = mix(vec3(227., 155., 0.), vec3(100., 50., 255.), d) / 255.;\n        `\n        )\n        .replace(\n          `#include <begin_vertex>`,\n          `#include <begin_vertex>\n          float t = time;\n          float moveT = mod(shift.x + shift.z * t, PI2);\n          float moveS = mod(shift.y + shift.z * t, PI2);\n          transformed += vec3(cos(moveS) * sin(moveT), cos(moveT), sin(moveS) * sin(moveT)) * shift.w;\n        `\n        );\n      shader.fragmentShader = `\n        varying vec3 vColor;\n        ${shader.fragmentShader}\n      `\n        .replace(\n          `#include <clipping_planes_fragment>`,\n          `#include <clipping_planes_fragment>\n          float d = length(gl_PointCoord.xy - 0.5);\n          //if (d > 0.5) discard;\n        `\n        )\n        .replace(\n          `vec4 diffuseColor = vec4( diffuse, opacity );`,\n          `vec4 diffuseColor = vec4( vColor, smoothstep(0.5, 0.1, d)/* * 0.5 + 0.5*/ );`\n        );\n    },\n  });\n\n  p = new THREE.Points(g, m);\n  p.rotation.order = \"ZYX\";\n  p.rotation.z = 0.2;\n  scene.add(p);\n\n  clock = new THREE.Clock();\n};\n\nconst update = () => {\n  controls.update();\n  let t = clock.getElapsedTime() * 0.5;\n  gu.time.value = t * Math.PI;\n  p.rotation.y = t * 0.05;\n  renderer.render(scene, camera);\n};\n\nconst handleResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nconst animate = () => {\n  update();\n  requestAnimationFrame(animate);\n};\n\ninit();\nwindow.addEventListener(\"resize\", handleResize);\nanimate();\nreturn () => {\n  window.removeEventListener(\"resize\", handleResize);\n  // Clean up Three.js resources (optional)\n  scene.remove(p);\n  p.geometry.dispose();\n  p.material.dispose();\n};\n  \n}, []);\n  \nreturn <canvas ref={canvasRef} />;\n};\n\nexport default ThreeScene;\n","import { BUTTON,DIV,DIV_CARD, P} from \"./HomePage.styled\";\nimport { GiExitDoor } from 'react-icons/gi';\nimport card  from '../../../images/Follow.png';\nimport card2  from '../../../images/Following.png';\nimport ThreeScene from \"./ThreeScene\";\n\nexport default function HomePage() {\n    return (\n        <>\n        <BUTTON to=\"/tweets\">\n            <GiExitDoor size={52} color=\"#c0f\"/>\n        </BUTTON>\n        <DIV>\n                <P> The test assignment involves the development of a web\n                    application using the following technologies and libraries: React, Redux\n                    (with Redux Toolkit and Redux DevTools Extension), React Router, Axios, Styled Components.\n                    The project is created using Create React App and also includes React Icons, React Loader Spinner, React Redux Persist.\n                    Creation of requests by user profile, added interactivity when clicking on the <i>Follow</i>  button.\n                    The Three.js library is used for data visualization, responsive design. Completed according to the specification.\n                </P>\n        </DIV>\n        <DIV_CARD>\n            <img src={`${card}`} alt=\"card\" width=\"240\"  />\n            <img src={`${card2}`} alt=\"card\" width=\"240\"  />\n            </DIV_CARD>\n            \n        <ThreeScene />\n        </>\n    )\n};\n"],"names":["BUTTON","styled","NavLink","_templateObject","_taggedTemplateLiteral","P","_templateObject2","DIV","_templateObject3","DIV_CARD","_templateObject4","canvasRef","useRef","useEffect","scene","camera","renderer","controls","gu","sizes","shift","pts","g","m","p","clock","handleResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","THREE","background","position","set","canvas","current","OrbitControls","domElement","enableDamping","enablePan","time","value","pushShift","push","Math","random","PI","Array","fill","map","randomDirection","multiplyScalar","i","rand","pow","radius","sqrt","R","setFromCylindricalCoords","setFromPoints","setAttribute","size","transparent","depthTest","blending","onBeforeCompile","shader","uniforms","vertexShader","concat","replace","fragmentShader","rotation","order","z","add","init","addEventListener","animate","update","t","getElapsedTime","y","render","requestAnimationFrame","removeEventListener","remove","geometry","dispose","material","_jsx","ref","HomePage","_jsxs","_Fragment","children","to","GiExitDoor","color","src","card","alt","width","card2","ThreeScene"],"sourceRoot":""}